{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoDao.js"],"names":["NegociacaoDao","constructor","connection","_connection","_store","adiciona","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","apagaTodos","clear","listaTodos","negociacoes","cursor","openCursor","actual","target","result","push","Negociacao","value","_data","_quantidade","_valor","continue"],"mappings":";;;;;;AAAO,YAAMA,aAAN,CAAoB;AACzBC,oBAAYC,UAAZ,EAAwB;AACtB,eAAKC,WAAL,GAAmBD,UAAnB;AACA,eAAKE,MAAL,GAAc,aAAd;AACD;AACDC,iBAASC,UAAT,EAAqB;AACnB,iBAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,kBAAMC,UAAU,KAAKP,WAAL,CAAiBQ,WAAjB,CAA6B,CAAC,KAAKP,MAAN,CAA7B,EAA4C,WAA5C,EAAyDQ,WAAzD,CAAqE,KAAKR,MAA1E,EAAkFS,GAAlF,CAAsFP,UAAtF,CAAhB;;AAEAI,oBAAQI,SAAR,GAAqBC,CAAD,IAAOP,SAA3B;;AAEAE,oBAAQM,OAAR,GAAmBD,CAAD,IAAON,OAAO,sCAAP,CAAzB;AACD,WANM,CAAP;AAOD;AACDQ,qBAAa;AACX,iBAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,kBAAMC,UAAU,KAAKP,WAAL,CAAiBQ,WAAjB,CAA6B,CAAC,KAAKP,MAAN,CAA7B,EAA4C,WAA5C,EAAyDQ,WAAzD,CAAqE,KAAKR,MAA1E,EAAkFc,KAAlF,EAAhB;;AAEAR,oBAAQI,SAAR,GAAqBC,CAAD,IAAOP,SAA3B;;AAEAE,oBAAQM,OAAR,GAAmBD,CAAD,IAAON,OAAO,wCAAP,CAAzB;AACD,WANM,CAAP;AAOD;AACDU,qBAAa;AACX,iBAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,kBAAMW,cAAc,EAApB;;AAEA,kBAAMC,SAAS,KAAKlB,WAAL,CAAiBQ,WAAjB,CAA6B,CAAC,KAAKP,MAAN,CAA7B,EAA4C,WAA5C,EAAyDQ,WAAzD,CAAqE,KAAKR,MAA1E,EAAkFkB,UAAlF,EAAf;;AAEAD,mBAAOP,SAAP,GAAoBC,CAAD,IAAO;AACxB,oBAAMQ,SAASR,EAAES,MAAF,CAASC,MAAxB;;AAEA,kBAAIF,MAAJ,EAAY;AACVH,4BAAYM,IAAZ,CAAiB,IAAIC,UAAJ,CAAeJ,OAAOK,KAAP,CAAaC,KAA5B,EAAmCN,OAAOK,KAAP,CAAaE,WAAhD,EAA6DP,OAAOK,KAAP,CAAaG,MAA1E,CAAjB;AACAR,uBAAOS,QAAP;AACD,eAHD,MAGO;AACLxB,wBAAQY,WAAR;AACD;AACF,aATD;;AAWAC,mBAAOL,OAAP,GAAkBD,CAAD,IAAON,OAAO,uCAAP,CAAxB;AACD,WAjBM,CAAP;AAkBD;AA1CwB","file":"NegociacaoDao.js","sourcesContent":["export class NegociacaoDao {\r\n  constructor(connection) {\r\n    this._connection = connection;\r\n    this._store = \"negociacoes\";\r\n  }\r\n  adiciona(negociacao) {\r\n    return new Promise((resolve, reject) => {\r\n      const request = this._connection.transaction([this._store], \"readwrite\").objectStore(this._store).add(negociacao);\r\n\r\n      request.onsuccess = (e) => resolve();\r\n\r\n      request.onerror = (e) => reject(\"nao foi possivel salvar a negociacao\");\r\n    });\r\n  }\r\n  apagaTodos() {\r\n    return new Promise((resolve, reject) => {\r\n      const request = this._connection.transaction([this._store], \"readwrite\").objectStore(this._store).clear();\r\n\r\n      request.onsuccess = (e) => resolve();\r\n\r\n      request.onerror = (e) => reject(\"nao foi possivel apagar as negociacoes\");\r\n    });\r\n  }\r\n  listaTodos() {\r\n    return new Promise((resolve, reject) => {\r\n      const negociacoes = [];\r\n\r\n      const cursor = this._connection.transaction([this._store], \"readwrite\").objectStore(this._store).openCursor();\r\n\r\n      cursor.onsuccess = (e) => {\r\n        const actual = e.target.result;\r\n\r\n        if (actual) {\r\n          negociacoes.push(new Negociacao(actual.value._data, actual.value._quantidade, actual.value._valor));\r\n          actual.continue();\r\n        } else {\r\n          resolve(negociacoes);\r\n        }\r\n      };\r\n\r\n      cursor.onerror = (e) => reject(\"nao foi possivel listar as negociacao\");\r\n    });\r\n  }\r\n}\r\n"]}