{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacoesView","Mensagem","MensagemView","NegociacaoService","getNegociacaoDao","DataInvalidaException","Negociacao","Bind","DateConverter","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","e","preventDefault","_criaNegociacao","_limpaFormulario","error","console","log","message","value","focus","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia","importaNegociacoes","obtemNegociacoesDoPeriodo","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes } from \"../domain/negociacao/Negociacoes\";\r\nimport { NegociacoesView } from \"../ui/views/NegociacoesView\";\r\nimport { Mensagem } from \"../ui/models/Mensagem\";\r\nimport { MensagemView } from \"../ui/views/MensagemView\";\r\nimport { NegociacaoService } from \"../domain/negociacao/NegociacaoService\";\r\nimport { getNegociacaoDao } from \"../util/DaoFactory\";\r\nimport { DataInvalidaException } from \"../ui/converters/DataInvalidaException\";\r\nimport { Negociacao } from \"../domain/negociacao/Negociacao\";\r\nimport { Bind } from \"../util/Bind\";\r\nimport { DateConverter } from \"../ui/converters/DateConverter\";\r\n\r\nexport class NegociacaoController {\r\n  constructor() {\r\n    const $ = document.querySelector.bind(document);\r\n\r\n    this._inputData = $(\"#data\");\r\n    this._inputQuantidade = $(\"#quantidade\");\r\n    this._inputValor = $(\"#valor\");\r\n\r\n    this._negociacoes = new Bind(new Negociacoes(), new NegociacoesView(\"#negociacoes\"), \"adiciona\", \"esvazia\");\r\n\r\n    this._mensagem = new Bind(new Mensagem(), new MensagemView(\"#mensagemView\"), \"texto\");\r\n    this._service = new NegociacaoService();\r\n\r\n    this._init();\r\n  }\r\n  _init() {\r\n    getNegociacaoDao()\r\n      .then((dao) => dao.listaTodos())\r\n      .then((negociacoes) => negociacoes.forEach((negociacao) => this._negociacoes.adiciona(negociacao)))\r\n      .catch((err) => (this._mensagem.texto = err));\r\n  }\r\n  adiciona(e) {\r\n    try {\r\n      e.preventDefault();\r\n      const negociacao = this._criaNegociacao();\r\n      getNegociacaoDao()\r\n        .then((dao) => dao.adiciona(negociacao))\r\n        .then(() => {\r\n          this._negociacoes.adiciona(this._criaNegociacao());\r\n          this._mensagem.texto = \"Negociacao adicionada com sucesso\";\r\n          this._limpaFormulario();\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      if (error instanceof DataInvalidaException) {\r\n        this._mensagem.texto = error.message;\r\n      } else {\r\n        this._mensagem.texto = `Erro desconhecido, por favor entrar em contacto com a assistencia`;\r\n      }\r\n    }\r\n  }\r\n  //the method below can only be accessed inside the class. its a private method\r\n  _limpaFormulario() {\r\n    this._inputData.value = \"\";\r\n    this._inputQuantidade.value = 1;\r\n    this._inputValor.value = 0.0;\r\n    this._inputData.focus();\r\n  }\r\n  _criaNegociacao() {\r\n    return new Negociacao(\r\n      DateConverter.paraData(this._inputData.value),\r\n      parseInt(this._inputQuantidade.value),\r\n      parseFloat(this._inputValor.value)\r\n    );\r\n  }\r\n  apaga() {\r\n    getNegociacaoDao()\r\n      .then((dao) => dao.apagaTodos())\r\n      .then(() => {\r\n        this._negociacoes.esvazia();\r\n        this._mensagem.texto = \"Negociacoes apagadas com sucesso\";\r\n      })\r\n      .catch((err) => (this._mensagem.texto = err));\r\n  }\r\n\r\n  importaNegociacoes(e) {\r\n    // this._service.obtemNegociacoesDaSemana((err, negociacoes) => {\r\n    //   if (err) {\r\n    //     this._mensagem.texto = err;\r\n    //     return;\r\n    //   }\r\n    //   negociacoes.forEach((negociacao) => this._negociacoes.adiciona(negociacao));\r\n    //   this._mensagem.texto = `Negociacoes importadas com sucesso`;\r\n    // });\r\n    //FIXME: The code below is optional to the code above, the idea implemented below, uses promisses to handle the imports to the API\r\n    // const negociacoes = [];\r\n    // this._service\r\n    //   .obtemNegociacoesDaSemana()\r\n    //   .then((semana) => {\r\n    //     negociacoes.push(...semana);\r\n    //     return this._service.obtemNegociacoesDaSemanaAnterior();\r\n    //   })\r\n    //   .then((anterior) => {\r\n    //     negociacoes.push(...anterior);\r\n    //     return this._service.obtemNegociacoesDaSemanaRetrasada();\r\n    //   })\r\n    //   .then((retrasada) => {\r\n    //     negociacoes.push(...retrasada);\r\n    //     negociacoes.forEach((negociacao) => this._negociacoes.adiciona(negociacao));\r\n    //     this._mensagem.texto = `Negociacoes importadas com sucesso`;\r\n    //   })\r\n    //   .catch((error) => (this._mensagem.texto = error));\r\n\r\n    this._service.obtemNegociacoesDoPeriodo().then((negociacoes) => {\r\n      negociacoes\r\n        .filter(\r\n          (novaNegociacao) => !this._negociacoes.paraArray().some((negociacaoExistente) => novaNegociacao.equals(negociacaoExistente))\r\n        )\r\n        .forEach((negociacao) => this._negociacoes.adiciona(negociacao));\r\n    });\r\n  }\r\n}\r\n"]}